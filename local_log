bash scripts/batchBinCounts.sh
bigWigToBedGraph data/bigwig_files/BI.Adult_Liver.H3K27me3.3.bw data/bigwig_files/BI.Adult_Liver.H3K27me3.3.bedGraph
perl ../scripts/countBedToRegBins.pl GSM669624_UCSF-UBC.Fetal_Brain.H3K4me3.HuFNSC-T.chr11.bed ../data/genome_table.hg19 1000 testBinning11.out
bash scripts/batchSplitBedGzToBedByChr.sh 
bash scripts/binCountRegFromBed.sh data/bed_files/GSM621685_BI.Skeletal_Muscle.H3K4me3.62.bed.gz
bash scripts/batchBinCountsRegFromBed.sh 
mkdir export
find output/binCounts/ -name '*.chr11.1000.binCounts' | xargs tar -rvf export/chr11.100.bincounts.all.tar
gzip export/chr11.100.bincounts.all.tar
cat `find output/binCounts/GSM621645_BI.Stomach_Smooth_Muscle.H3K4me3.28 -name '*9.1000.binCounts'`	# concatenate output files. Note backticks.
bash scripts/batchCatChromFilesInDir.sh 
# for some unknown reason, a single chromosome from one sample failed in bin counting. Here I resubmit just the one and add to the summary for that chrom.
perl scripts/countBedToRegBins.pl data/bed_files/byChrom/GSM537643_BI.Pancreatic_Islets.H3K4me3.pancreatic_islets_normal_3_27_09/GSM537643_BI.Pancreatic_Islets.H3K4me3.pancreatic_islets_normal_3_27_09.chr16.bed data/genome_table.hg19 1000 output/binCounts/GSM537643_BI.Pancreatic_Islets.H3K4me3.pancreatic_islets_normal_3_27_09/GSM537643_BI.Pancreatic_Islets.H3K4me3.pancreatic_islets_normal_3_27_09.chr16.1000.binCounts
mv output/binCounts/temp.chr16.binCounts output/binCounts/GSM537643_BI.Pancreatic_Islets.H3K4me3.pancreatic_islets_normal_3_27_09.1000.binCounts
bedSort output/binCounts/GSM537643_BI.Pancreatic_Islets.H3K4me3.pancreatic_islets_normal_3_27_09.1000.binCounts output/binCounts/GSM537643_BI.Pancreatic_Islets.H3K4me3.pancreatic_islets_normal_3_27_09.1000.binCounts
# the chr16 problem is resolved. Move onto to binding the bins and compressing for transfer.
Rscript scripts/bindGenomeBins.R output/binCounts/ 'binCounts' genomeCountsAllMarks.tab
bzip2 -k output/binCounts/genomeCountsAllMarks.tab
#  Rscript scripts/createKappaFromGo.R data/go2prot.map data/kappaMatrix.tab  # didn't work.
qsub -V -b y -cwd -q node.q -N kappaMatrix Rscript scripts/createKappaFromGo.R data/go2prot.map data/kappaMatrix.tab
qsub -V -b y -cwd -q slow.q -N kappaMatrix Rscript scripts/createKappaFromGo.R data/go2prot.map data/kappaMatrix.tab
qsub -V -b y -cwd -q slow.q -N kappa.2.Matrix Rscript scripts/createKappaFromGo.R data/go2prot.map data/kappaMatrix.2.tab
qsub -V -b y -cwd -q fast.q -N kappa.3.Matrix Rscript scripts/createKappaFromGo.R data/go2prot.map data/kappaMatrix.3.tab
qsub -V -b y -cwd -q slow.q -N coverageBedTest 'coverageBed -a data/bed_files/GSM669624_UCSF-UBC.Fetal_Brain.H3K4me3.HuFNSC-T.bed -b data/testBins.bed > sandbox/coverageBed.test'
awk '{print $1"\t"0"\t"$2}' data/genome_table.hg19 > data/genome_table.hg19.bed	# add zeroes to convert chrom lengths to bed file for use in bedcoverage.
qsub -V -b y -cwd -q slow.q -N bedCoverageTest bash scripts/runCoverageBed.sh data/bed_files/test.bed 
bash scripts/batchCoverageBed.sh 
